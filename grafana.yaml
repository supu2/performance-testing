apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  labels:
    app: grafana
data:
  grafana.ini: |
    [server]
    http_port = 3000
    root_url = %(protocol)s://%(domain)s:%(http_port)s/
    serve_from_sub_path = true

    [security]
    # Do not set the username and password here as we will use environment variables instead
    # admin_user = admin
    # admin_password = admin123

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  labels:
    app: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin123  # Change this for production to a more secure password
          envFrom:
            - configMapRef:
                name: grafana-config
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: NodePort  # Use 'LoadBalancer' for cloud environments or 'ClusterIP' for internal access
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32000  # Change as needed
  selector:
    app: grafana
